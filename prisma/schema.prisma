// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id          String    @id @default(uuid())
  userId      String
  title       String?   @db.Text
  description String?   @db.Text
  imageUrl    String?   @db.Text
  location    Json?
  date        DateTime?
  price       Float?
  isPublic    Boolean   @default(false)
  categoryId  String?

  ageCategories AgeCategory[]
  files         File[]
  competitors   Competitor[]
  enrollments   Enroll[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category Category? @relation(fields: [categoryId], references: [id])

  @@index([categoryId])
}

model File {
  id          String  @id @default(uuid())
  name        String
  url         String  @db.Text
  visibleName String?

  eventId String
  event   Event  @relation(fields: [eventId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([eventId])
}

model Category {
  id     String  @id @default(uuid())
  name   String  @unique
  events Event[]
}

model Competitor {
  id            String  @id @default(uuid())
  name          String?
  surname       String?
  chip          Int?
  ageCategoryId String?
  eventId       String
  enrollId      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  event       Event        @relation(fields: [eventId], references: [id], onDelete: Cascade)
  ageCategory AgeCategory? @relation(fields: [ageCategoryId], references: [id])
  enroll      Enroll       @relation(fields: [enrollId], references: [id], onDelete: Cascade)

  @@index([eventId])
  @@index([ageCategoryId])
  @@index([enrollId])
}

model AgeCategory {
  id   String  @id @default(uuid())
  name String?

  eventId String
  event   Event  @relation(fields: [eventId], references: [id], onDelete: Cascade)

  competitors Competitor[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([eventId])
}

model Enroll {
  id      String @id @default(uuid())
  eventId String
  userId  String

  competitors Competitor[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@index([eventId])
}
